# http://travis-ci.org/#!/LaGuer/Jupyt-Nb
language: python            # this works for Linux but is an error on macOS or Windows
matrix:
  include:
    - name: "Python 3.7.1 on Xenial Linux"
      os: linux
      python: 3.7           # this works for Linux but is ignored on macOS or Windows
      dist: xenial          # required for Python >= 3.7
      before_install: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ; bash miniconda.sh -b -p $HOME/miniconda -f -u
      env: TRAVIS_PYTHON_VERSION=3.7
    - name: "Python 3.7.2 on macOS"
      os: osx
      osx_image: xcode10.2  # Python 3.7.2 running on macOS 10.14.3
      language: shell       # 'language: python' is an error on Travis CI macOS
      before_install: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh ; bash miniconda.sh -b -p $HOME/miniconda -f -u
    - name: "Python 3.7.3 on Windows"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: bash       # 'language: python' is an error on Travis CI Windows
      before_install: choco install python ;  choco install miniconda3 ; $HOME/miniconda/bin/conda info -a ; /c/tools//miniconda3/bin/conda info -a
      env: PATH=/c/Python37:/c/Python37/Scripts:/c/Users/travis/miniconda/scripts:/c/Users/travis/miniconda/:$PATH

 
  allow_failures:
    - os: windows
    - os: osx
      
before_install:
  
  - |
    
    if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version
  - ls; pwd
#  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
#  - bash miniconda.sh -b -p $HOME/miniconda -f -u
  - ls; pwd
#  - sudo find / -name "conda" -print
  - $HOME/miniconda/bin/conda info -a

  - |
    
    if [[ "$TRAVIS_OS_NAME" == "Ubuntu" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version
#  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - ls ; pwd
#  - bash miniconda.sh -b -p $HOME/miniconda -f -u
  - ls; pwd
#  - sudo find / -name "conda" -print
  - $HOME/miniconda/bin/conda info -a
  

  - |
    
    if [[ "$TRAVIS_OS_NAME" == "windows" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "3.7" ]]; then
      env | sort
      if ! which python$TRAVIS_PYTHON_VERSION; then
        choco install miniconda3
      fi
      python3 -m pip install virtualenv
      python3 -m virtualenv -p $(which python$TRAVIS_PYTHON_VERSION) ~/travis-env
      source ~/travis-env/bin/activate
    fi
  - python --version
  - pwd
  - ls
#  - conda info -a

install: 
  - pip3 install --upgrade pip  # all three OSes agree about 'pip3'
  - pip install utils
  - pip install pytest
  - python --version
#  - bash miniconda.sh -b -p $HOME/miniconda -f -u
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r

#  - start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=AllUsers /RegisterPython=1 /S /D=%UserProfile%\Miniconda3
#  - conda config --set always_yes yes --set changeps1 no
  - echo $HOME/miniconda/bin 
#  - cd $HOME/miniconda/bin
  - ls $HOME/
# Useful for debugging any issues with conda
  - $HOME/miniconda/bin/conda info -a
  - $HOME/miniconda/bin/conda config --set always_yes yes --set changeps1 no
#  - conda update -q conda

  - $HOME/miniconda/bin/conda env create -n test-environment python=$TRAVIS_PYTHON_VERSION -f environment.yml
  - source activate test-environment

#  - conda env create -n test-environment python=$TRAVIS_PYTHON_VERSION -f environment.yml
#  - source activate test-environment
#  - conda info --envs

#  - pip install -U pip setuptools # Travis breaks without this
#  - pip install -r requirements.txt
#  - sudo find / -name "jupyter" -print
  - pip3 install jupyter
  - pip3 install nbformat
  - jupyter nbextension enable --py widgetsnbextension
  - wget https://github.com/hakimel/reveal.js/archive/master.zip
  - unzip master.zip
  - mv reveal.js-master reveal.js
   
# 'python' points to Python 2.7 on macOS but points to Python 3.7 on Linux and Windows
# 'python3' is a 'command not found' error on Windows but 'py' works on Windows only
#script: python3 my_app.py || python my_app.py
script:
  - cd $HOME/build/LaGuer/Jupyt-Nb/ && ls
#  - sudo find / -name "test_nb.py" -print
#  - build/LaGuer/Jupyter-Notebook-Practice-Physical-Constants-Ratios/test_nb.py
  - ls && pwd
  - python test_nb.py  || python test_nb.py || python test_nb.py
  - python3 test_nb.py  || python3 test_nb.py || python3 test_nb.py
  - py.test
  - jupyter nbconvert test.ipynb --to slides --reveal-prefix=reveal.js
  
after_success: |
  if [ -n "$GITHUB_API_KEY" ]; then
  git checkout --orphan gh-pages
  git rm -rf --cached .
  mv nb.slides.html index.html
  git add -f --ignore-errors index.html img reveal.js
  git -c user.name='travis' -c user.email='travis' commit -m init
  git push -f -q https://$GITHUB_USER:$GITHUB_API_KEY@github.com/$TRAVIS_REPO_SLUG gh-pages
  fi
